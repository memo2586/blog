<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/12/05/hello-world/"/>
    <url>/2023/12/05/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Games101-Lecture_02_Review_of_Linear_Algebra</title>
    <link href="/2023/12/05/Games101-Lecture-02-Review-of-Linear-Algebra/"/>
    <url>/2023/12/05/Games101-Lecture-02-Review-of-Linear-Algebra/</url>
    
    <content type="html"><![CDATA[<h1 id="review-of-linear-algebra">Review of Linear Algebra</h1><h3 id="vector-addition">1. Vector Addition</h3><ul><li><strong>平行四边形法则与三角形法则</strong></li></ul><p><img src="image-20231122225034808.png" alt="image-20231122225034808" style="zoom: 67%;" /></p><ul><li><p><strong>坐标系</strong></p><p><img src="image-20231122232540795.png" alt="image-20231122232540795" style="zoom:67%;" /></p></li></ul><p>​ 缺省时一般认为向量为列向量: <span class="math display">\[\mathbf{A}=\begin{pmatrix}    x \\    y\end{pmatrix}\tag1\]</span></p><p><span class="math display">\[\mathbf{A^T}=\begin{pmatrix}    x &amp; y\end{pmatrix} \tag2\]</span></p><p><span class="math display">\[\|\mathbf{A}\|=\sqrt{x^2+y^2} \tag3\]</span></p><hr /><h3 id="vector-multiplication-dot-product">2. Vector Multiplication (DotProduct)</h3><ul><li><p><strong>点乘的计算</strong></p><p><img src="image-20231122230307232.png" style="zoom:67%;" /></p><p><strong>向量点乘的结果是一个数。</strong></p></li></ul><p><span class="math display">\[\overrightarrow{a}\cdot\overrightarrow{b}=\|\overrightarrow{a}\|\|\overrightarrow{b}\|\cos\theta\tag1\]</span></p><p><span class="math display">\[\cos\theta=\frac{\overrightarrow{a}\cdot\overrightarrow{b}}{\|\overrightarrow{a}\|\|\overrightarrow{b}\|}\tag2\]</span></p><p>​ 当两个向量都是单位向量时（长度都为1）： <spanclass="math display">\[\cos\theta=\hat{a}\cdot\hat{b}\]</span></p><ul><li><p><strong>点乘的性质</strong></p><ul><li><p><spanclass="math inline">\(\overrightarrow{a}\cdot\overrightarrow{b}=\overrightarrow{b}\cdot\overrightarrow{a}\)</span></p></li><li><p><spanclass="math inline">\(\overrightarrow{a}\cdot(\overrightarrow{b}+\overrightarrow{c})=\overrightarrow{a}\cdot\overrightarrow{b}+\overrightarrow{a}\cdot\overrightarrow{c}\)</span></p></li><li><p><spanclass="math inline">\((k\overrightarrow{a})\cdot=\overrightarrow{a}\cdot(k\overrightarrow{a})=k(\overrightarrow{a}\cdot\overrightarrow{b})\)</span></p></li></ul></li><li><p><strong>笛卡尔坐标系下的点乘运算</strong></p></li></ul><p><span class="math display">\[\overrightarrow{a}\cdot\overrightarrow{b}=\begin{pmatrix}    x_a \\    y_a\end{pmatrix}\cdot\begin{pmatrix}    x_b \\    y_b\end{pmatrix}=x_ax_b+y_ay_b\]</span></p><p>​ <strong>点乘最大的作用在于找到两个向量之间的夹角大小。</strong></p><ul><li><strong>通过点乘求向量在另一个向量上的投影</strong></li></ul><p>​点乘的另一个作用是用于<strong>找到一个向量在另一个向量上的投影</strong>：</p><p><img src="image-20231123172442079.png" style="zoom:67%;" /></p><p>​ <span class="math inline">\(\overrightarrow{b}_\bot\)</span> 是<span class="math inline">\(\overrightarrow{b}\)</span> 在 <spanclass="math inline">\(\overrightarrow{a}\)</span> 方向上的投影，因此：<span class="math display">\[\overrightarrow{b_\bot}=k\hat{a}\]</span> ​ 其中 k 的大小为： <span class="math display">\[k=\|\overrightarrow{b_\bot}\|=\|\overrightarrow{b}\|\cos{\theta}\]</span> ​ 利用点乘计算出 <spanclass="math inline">\(\cos{\theta}\)</span> 后便可以求出 <spanclass="math inline">\(\overrightarrow{b_\bot}\)</span> 。</p><p>​<strong>已知向量在另一个向量上的投影后，可以对该向量任意地进行平行与垂直的分解</strong>：</p><p><img src="image-20231123184130756.png" style="zoom:67%;" /></p><ul><li><p><strong>通过点乘计算向量间的位置关系</strong></p><p><img src="image-20231123195107566.png" style="zoom:67%;" /></p><p>​ 以向量 <span class="math inline">\(\overrightarrow{a}\)</span>的方向为基准定义前与后，当一个向量与向量 <spanclass="math inline">\(\overrightarrow{a}\)</span>的点乘大于0时，称该向量位于前方。反之，当一个向量与向量 <spanclass="math inline">\(\overrightarrow{a}\)</span>的点乘小于0时，称该向量位于后方。</p><p>​<strong>两个向量的单位向量的点乘越接近1，则这两个向量在方向上越接近。</strong></p></li></ul><hr /><h3 id="vector-multiplication-cross-product">3 Vector Multiplication(Cross Product)</h3><ul><li><p><strong>叉乘的计算</strong></p><p><img src="image-20231123200453651.png" style="zoom:67%;" /></p></li></ul><p>​<strong>两个向量叉乘的计算结果是一个垂直于这两个向量所在平面的向量。</strong><span class="math display">\[\overrightarrow{a}\cross\overrightarrow{b}=-\overrightarrow{b}\cross\overrightarrow{a}\tag1\]</span></p><p><span class="math display">\[\|\overrightarrow{a}\cross\overrightarrow{b}\|=\|\overrightarrow{a}\|\|\overrightarrow{b}\|\sin{\phi}\tag2\]</span></p><p>​利用叉乘可以建立一个在三维空间中的直角坐标系（使用右手螺旋定则可以确定运算结果的向量的方向）：<span class="math display">\[\overrightarrow{x}\cross\overrightarrow{y}=+\overrightarrow{z} \tag1\]</span></p><p><span class="math display">\[\overrightarrow{y}\cross\overrightarrow{x}=-\overrightarrow{z} \tag2\]</span></p><p><span class="math display">\[\overrightarrow{y}\cross\overrightarrow{z}=+\overrightarrow{x} \tag3\]</span></p><p><span class="math display">\[......\]</span></p><ul><li><p><strong>叉乘的性质</strong></p><ul><li><p><spanclass="math inline">\(\overrightarrow{a}\cross\overrightarrow{b}=-\overrightarrow{b}\cross\overrightarrow{a}\)</span></p></li><li><p><spanclass="math inline">\(\overrightarrow{a}\cross\overrightarrow{a}=\overrightarrow{0}\)</span></p></li><li><p><spanclass="math inline">\(\overrightarrow{a}\cross(\overrightarrow{b}+\overrightarrow{c})=\overrightarrow{a}\cross\overrightarrow{b}+\overrightarrow{a}\cross\overrightarrow{c}\)</span></p></li><li><p><spanclass="math inline">\(\overrightarrow{a}\cross(k\overrightarrow{b})=k(\overrightarrow{a}\cross\overrightarrow{b})\)</span></p></li></ul></li><li><p><strong>笛卡尔坐标系下的叉乘运算</strong> <spanclass="math display">\[\overrightarrow{a}\cross\overrightarrow{b}=\begin{pmatrix}  y_az_b-y_bz_a \\  z_ax_b-x_az_b \\  x_ay_b-y_ax_b\end{pmatrix}\]</span></p></li><li><p><strong>叉乘的作用</strong></p></li></ul><p>​ <strong>判断某一点是否在图形的内部</strong>。</p><p>​ <img src="image-20231124152224648.png" style="zoom:33%;" /></p><p>​ 如图，<spanclass="math inline">\(\overrightarrow{a}\cross\overrightarrow{b}\)</span>的值为正，可得 <span class="math inline">\(\overrightarrow{b}\)</span>在 <span class="math inline">\(\overrightarrow{a}\)</span>的左侧，反之同理，可以判断两个向量的相对左右位置。</p><p><img src="image-20231124152552096.png" style="zoom: 33%;" /></p><p>​要判断点P是否在顺序的，首尾相接的三个向量组成的三角形内部，则只需要计算<spanclass="math inline">\(\overrightarrow{AB}\cross\overrightarrow{AP}\)</span>、<spanclass="math inline">\(\overrightarrow{BC}\cross\overrightarrow{BP}\)</span>、<spanclass="math inline">\(\overrightarrow{CA}\cross\overrightarrow{CP}\)</span>的值是否都为正值或负值，即点P都在三个向量的左侧或右侧。</p><hr /><h3 id="orthonormal-bases-and-coordinate-frames">4. Orthonormal basesand coordinate frames</h3><ul><li><p>建立一个直角坐标系，定义： <span class="math display">\[\|\overrightarrow{u}\|=\|\overrightarrow{v}\|=\|\overrightarrow{w}\|=1\tag1\]</span></p><p><span class="math display">\[\overrightarrow{u}\cdot\overrightarrow{v}=\overrightarrow{v}\cdot\overrightarrow{w}=\overrightarrow{u}\cdot\overrightarrow{w}=0\tag2\]</span></p><p><span class="math display">\[\overrightarrow{w}=\overrightarrow{u}\cross\overrightarrow{v} \tag3\]</span></p><p>可以使用投影将任意向量分解，如： <span class="math display">\[\overrightarrow{p}=(\overrightarrow{p}\cdot\overrightarrow{u})\overrightarrow{v}+(\overrightarrow{p}\cdot\overrightarrow{v})\overrightarrow{v}+(\overrightarrow{p}\cdot\overrightarrow{w})\overrightarrow{w}\]</span></p></li></ul><hr /><h3 id="matrix">5. Matrix</h3><ul><li><p><strong>矩阵乘法</strong></p><p>设 <span class="math inline">\(A\cross B=C\)</span> ，则有 <spanclass="math inline">\(C_{ij}=A_i\cdot B_j\)</span></p></li><li><p><strong>矩阵乘法的性质</strong></p><ul><li>不满足任何交换律</li><li><span class="math inline">\((AB)C = A(BC)\)</span></li><li><span class="math inline">\(A(B+C)=AB+AC\)</span></li><li><span class="math inline">\((A+B)C=AC+BC\)</span></li><li><span class="math inline">\((AB)^\intercal=B^\intercalA^\intercal\)</span></li></ul></li><li><p><strong>矩阵的逆</strong></p><ul><li>单位矩阵是只在对角线上有非零的元素，定义以下单位矩阵：</li></ul><p><span class="math display">\[I_{2\cross2}=\begin{pmatrix}  1 &amp; 0 \\  0 &amp; 1 \\\end{pmatrix}\]</span></p><p>​ 则有： <span class="math display">\[AA^{-1}=A^{-1}A=I\]</span></p><ul><li>矩阵的逆的性质： <span class="math display">\[(AB)^{-1}=B^{-1}A^{-1}\]</span></li></ul></li><li><p><strong>将向量的乘积写成矩阵形式</strong></p><ul><li><p>点乘： <span class="math display">\[\overrightarrow{a}\cross\overrightarrow{b}=\overrightarrow{a}^T\overrightarrow{b}=\begin{pmatrix}x_a &amp; y_a &amp; z_a\end{pmatrix}\begin{pmatrix}x_a \\y_a \\z_a\end{pmatrix}=(x_ax_b+y_ay_b+z_az_b)\]</span></p></li><li><p>叉乘： <span class="math display">\[\overrightarrow{a}\cross\overrightarrow{b}=A^*b=\begin{pmatrix}    0 &amp; -z_a &amp; y_a \\    z_a &amp; 0 &amp; -x_a \\    -y_a &amp; x_a &amp; 0\end{pmatrix}\begin{pmatrix}    x_b \\    y_b \\    z_b\end{pmatrix}\]</span></p></li></ul></li></ul><p>​</p><p>​</p>]]></content>
    
    
    
    <tags>
      
      <tag>Games101 , 计算机图形学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于opencv与pyautogui编写的天翼校园掉线自动重连脚本</title>
    <link href="/2023/10/21/%E5%9F%BA%E4%BA%8Eopencv%E4%B8%8Epyautogui%E7%BC%96%E5%86%99%E7%9A%84%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD%E6%8E%89%E7%BA%BF%E8%87%AA%E5%8A%A8%E9%87%8D%E8%BF%9E%E8%84%9A%E6%9C%AC/"/>
    <url>/2023/10/21/%E5%9F%BA%E4%BA%8Eopencv%E4%B8%8Epyautogui%E7%BC%96%E5%86%99%E7%9A%84%E5%A4%A9%E7%BF%BC%E6%A0%A1%E5%9B%AD%E6%8E%89%E7%BA%BF%E8%87%AA%E5%8A%A8%E9%87%8D%E8%BF%9E%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>因为下载机上的天翼校园隔三岔五就掉线，所以有了这个程序...</p><p>图形化界面需要用到pyqt5和qt-material</p><p>不会写python，乱写，程序倒是还挺稳定，能用 orz</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># main.py</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pyautogui<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> ImageGrab<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">from</span> PyQt5 <span class="hljs-keyword">import</span> QtWidgets<br><span class="hljs-keyword">from</span> qt_material <span class="hljs-keyword">import</span> apply_stylesheet<br><span class="hljs-keyword">from</span> main_window <span class="hljs-keyword">import</span> Ui_Form<br><br><span class="hljs-comment"># 读取目标图片</span><br>image_message = cv2.imread(<span class="hljs-string">&#x27;message.png&#x27;</span>)<br>image_login = cv2.imread(<span class="hljs-string">&#x27;login.png&#x27;</span>)<br>h1, w1, _ = image_message.shape<br>h2, w2, _ = image_login.shape<br>threshold = <span class="hljs-number">0.6</span><br>run_flag = <span class="hljs-literal">False</span><br>labelEdit = <span class="hljs-literal">None</span><br>errorNum = <span class="hljs-number">0</span><br><br><br><span class="hljs-comment"># 子线程</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">start_threading</span>:<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.image = <span class="hljs-literal">None</span><br>        self.run()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">find</span>(<span class="hljs-params">self, image</span>):<br>        self.image = image<br>        screenshot = <span class="hljs-literal">None</span><br>        <span class="hljs-comment"># 获取屏幕截图</span><br>        <span class="hljs-comment"># screenshot = ImageGrab.grab()</span><br>        <span class="hljs-keyword">try</span>:<br>            screenshot = ImageGrab.grab()<br>        <span class="hljs-keyword">except</span> OSError <span class="hljs-keyword">as</span> OSE:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;self.get_time()&#125;</span>] <span class="hljs-subst">&#123;OSE&#125;</span>&#x27;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> other_err:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;self.get_time()&#125;</span>] <span class="hljs-subst">&#123;other_err&#125;</span>&#x27;</span>)<br><br>        <span class="hljs-comment"># screenshot.save(f&#x27;src/&#123;self.get_time()&#125;.png&#x27;)</span><br>        <span class="hljs-keyword">if</span> screenshot <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> [-<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>]<br>        screenshot = np.array(screenshot)<br>        <span class="hljs-comment"># 在屏幕截图上搜索目标图片</span><br>        result = cv2.matchTemplate(screenshot, image, cv2.TM_CCOEFF_NORMED)<br>        loc = np.where(result &gt;= threshold)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(loc[<span class="hljs-number">0</span>]) &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(loc[<span class="hljs-number">1</span>]) &gt; <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> [loc[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>], loc[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]]<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_time</span>(<span class="hljs-params">self</span>):<br>        now = time.strftime(<span class="hljs-string">&#x27;%Y-%m-%d %H-%M-%S&#x27;</span>, time.localtime())<br>        <span class="hljs-keyword">return</span> now<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br><br>                <span class="hljs-keyword">global</span> run_flag, errorNum<br><br>                <span class="hljs-keyword">while</span> run_flag:<br>                    now = self.get_time()<br>                    set_label_text(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;now&#125;</span>]\nchecking...\nerrorNum: <span class="hljs-subst">&#123;errorNum&#125;</span>&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;now&#125;</span>]\n checking...&#x27;</span>)<br>                    x, y = self.find(image_message)<br><br>                    <span class="hljs-keyword">if</span> x == <span class="hljs-number">0</span>:<br>                        <span class="hljs-comment"># print(f&#x27; running normally!&#x27;)</span><br>                        <span class="hljs-keyword">pass</span><br>                    <span class="hljs-keyword">elif</span> x &lt; <span class="hljs-number">0</span>:<br>                        set_label_text(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;self.get_time()&#125;</span>] 截图失败！&#x27;</span>)<br>                        <span class="hljs-comment"># print(f&#x27;[&#123;self.get_time()&#125;] screen grab failed&#x27;)</span><br>                    <span class="hljs-keyword">else</span>:<br>                        errorNum = errorNum + <span class="hljs-number">1</span><br>                        now = self.get_time()<br>                        set_label_text(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;now&#125;</span>]\n Error! Enable automated scripts...&#x27;</span>)<br>                        <span class="hljs-comment"># print(f&#x27;[&#123;now&#125;]\n Error! Enable automated scripts...&#x27;)</span><br>                        time.sleep(<span class="hljs-number">1</span>)<br>                        <span class="hljs-comment"># print(f&#x27;[message_pos]: &#123;x&#125;,&#123;y&#125;&#x27;)</span><br>                        pyautogui.click(x + w1 // <span class="hljs-number">2</span>, y + h1 // <span class="hljs-number">2</span>)<br>                        time.sleep(<span class="hljs-number">1</span>)<br><br>                        <span class="hljs-keyword">while</span> run_flag:<br>                            x, y = self.find(image_login)<br>                            <span class="hljs-keyword">if</span> x == <span class="hljs-number">0</span>:<br>                                now = self.get_time()<br>                                set_label_text(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;now&#125;</span>]\nError!\ncant not find login button!\ntrying again...&#x27;</span>)<br>                                <span class="hljs-comment"># print(&quot;Error! can&#x27;t not find login! trying again...&quot;)</span><br>                                time.sleep(<span class="hljs-number">3</span>)<br>                            <span class="hljs-keyword">else</span>:<br>                                time.sleep(<span class="hljs-number">1</span>)<br>                                <span class="hljs-comment"># print(f&#x27;[login_pos]: &#123;x&#125;,&#123;y&#125;&#x27;)</span><br>                                pyautogui.click(x + w2 // <span class="hljs-number">2</span>, y + h2 // <span class="hljs-number">2</span>)<br>                                now = self.get_time()<br>                                set_label_text(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;now&#125;</span>]\nSuccess!\nAutomation script completed.&#x27;</span>)<br>                                <span class="hljs-comment"># print(&quot;Success! Automation script completed.&quot;)</span><br>                                <span class="hljs-keyword">break</span><br>                    time.sleep(<span class="hljs-number">3</span>)<br>                time.sleep(<span class="hljs-number">3</span>)<br><br>        <span class="hljs-keyword">except</span> OSError <span class="hljs-keyword">as</span> OSE:<br>            set_label_text(<span class="hljs-string">f&#x27;系统错误: <span class="hljs-subst">&#123;OSE&#125;</span>&#x27;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;self.get_time()&#125;</span>]系统错误: <span class="hljs-subst">&#123;OSE&#125;</span>&#x27;</span>)<br><br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> other_error:<br>            now = self.get_time()<br>            set_label_text(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;now&#125;</span>未知错误\n：<span class="hljs-subst">&#123;other_error&#125;</span>&#x27;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;now&#125;</span>未知错误\n：<span class="hljs-subst">&#123;other_error&#125;</span>&#x27;</span>)<br><br>        <span class="hljs-keyword">finally</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;STOP&quot;</span>)<br><br><br><span class="hljs-comment"># 主窗口</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MainWindow</span>(QtWidgets.QWidget, Ui_Form):<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(MainWindow, self).__init__()<br>        self.setupUi(self)<br>        <span class="hljs-keyword">global</span> labelEdit<br>        labelEdit = self.label<br>        apply_stylesheet(app, theme=<span class="hljs-string">&#x27;dark_teal.xml&#x27;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">click_start_button</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">global</span> run_flag<br>        <span class="hljs-keyword">if</span> run_flag:<br>            run_flag = <span class="hljs-literal">False</span><br>            self.startButton.setText(<span class="hljs-string">&quot;RESTART&quot;</span>)<br>            self.label.setText(<span class="hljs-string">&quot;Click button to start.&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            run_flag = <span class="hljs-literal">True</span><br>            self.startButton.setText(<span class="hljs-string">&quot;STOP&quot;</span>)<br>            self.label.setText(<span class="hljs-string">&quot;Running...\n&quot;</span>)<br><br><br>thread = threading.Thread(target=start_threading)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">set_label_text</span>(<span class="hljs-params">message</span>):<br>    labelEdit.setText(message)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app = QtWidgets.QApplication(sys.argv)<br><br>    <span class="hljs-comment"># 开启检测子线程</span><br>    thread.daemon = <span class="hljs-literal">True</span><br>    thread.start()<br><br>    test_ui = MainWindow()<br>    test_ui.show()<br><br>    sys.exit(app.exec_())<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># main_window.py</span><br><span class="hljs-keyword">from</span> PyQt5 <span class="hljs-keyword">import</span> QtCore, QtGui, QtWidgets<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Ui_Form</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">setupUi</span>(<span class="hljs-params">self, Form</span>):<br>        Form.setObjectName(<span class="hljs-string">&quot;AutoLogin&quot;</span>)<br>        Form.resize(<span class="hljs-number">300</span>, <span class="hljs-number">250</span>)<br>        Form.setMinimumSize(QtCore.QSize(<span class="hljs-number">300</span>, <span class="hljs-number">250</span>))<br>        Form.setMaximumSize(QtCore.QSize(<span class="hljs-number">300</span>, <span class="hljs-number">250</span>))<br>        font = QtGui.QFont()<br>        font.setFamily(<span class="hljs-string">&quot;微软雅黑&quot;</span>)<br>        font.setPointSize(<span class="hljs-number">12</span>)<br>        Form.setFont(font)<br>        Form.setContextMenuPolicy(QtCore.Qt.NoContextMenu)<br>        self.verticalLayoutWidget = QtWidgets.QWidget(Form)<br>        self.verticalLayoutWidget.setGeometry(QtCore.QRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">311</span>, <span class="hljs-number">261</span>))<br>        self.verticalLayoutWidget.setObjectName(<span class="hljs-string">&quot;verticalLayoutWidget&quot;</span>)<br>        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)<br>        self.verticalLayout.setContentsMargins(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>        self.verticalLayout.setObjectName(<span class="hljs-string">&quot;verticalLayout&quot;</span>)<br>        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)<br>        self.label.setMinimumSize(QtCore.QSize(<span class="hljs-number">0</span>, <span class="hljs-number">180</span>))<br>        self.label.setAlignment(QtCore.Qt.AlignCenter)<br>        self.label.setObjectName(<span class="hljs-string">&quot;label&quot;</span>)<br>        self.verticalLayout.addWidget(self.label)<br>        spacerItem = QtWidgets.QSpacerItem(<span class="hljs-number">20</span>, <span class="hljs-number">25</span>, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)<br>        self.verticalLayout.addItem(spacerItem)<br>        self.startButton = QtWidgets.QPushButton(self.verticalLayoutWidget)<br>        self.startButton.setMinimumSize(QtCore.QSize(<span class="hljs-number">130</span>, <span class="hljs-number">0</span>))<br>        self.startButton.setMaximumSize(QtCore.QSize(<span class="hljs-number">150</span>, <span class="hljs-number">16777215</span>))<br>        self.startButton.setObjectName(<span class="hljs-string">&quot;startButton&quot;</span>)<br>        self.verticalLayout.addWidget(self.startButton, <span class="hljs-number">0</span>, QtCore.Qt.AlignHCenter)<br>        spacerItem1 = QtWidgets.QSpacerItem(<span class="hljs-number">20</span>, <span class="hljs-number">40</span>, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)<br>        self.verticalLayout.addItem(spacerItem1)<br><br>        self.retranslateUi(Form)<br>        self.startButton.clicked.connect(Form.click_start_button) <span class="hljs-comment"># type: ignore</span><br>        QtCore.QMetaObject.connectSlotsByName(Form)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">retranslateUi</span>(<span class="hljs-params">self, Form</span>):<br>        _translate = QtCore.QCoreApplication.translate<br>        Form.setWindowTitle(_translate(<span class="hljs-string">&quot;Form&quot;</span>, <span class="hljs-string">&quot;AutoLogin&quot;</span>))<br>        self.label.setText(_translate(<span class="hljs-string">&quot;Form&quot;</span>, <span class="hljs-string">&quot;Click to Start.&quot;</span>))<br>        self.startButton.setText(_translate(<span class="hljs-string">&quot;Form&quot;</span>, <span class="hljs-string">&quot;Start&quot;</span>))<br></code></pre></td></tr></table></figure><p>用到的两张图片分别是天翼校园掉线时的提示窗口上的确认按钮和主程序窗口上的登录按钮，截个图就行。</p>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用WinCDEmu的galgame光盘映像的自动挂载与卸载脚本</title>
    <link href="/2023/10/11/%E4%BD%BF%E7%94%A8WinCDEmu%E7%9A%84galgame%E5%85%89%E7%9B%98%E6%98%A0%E5%83%8F%E7%9A%84%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%E4%B8%8E%E5%8D%B8%E8%BD%BD%E8%84%9A%E6%9C%AC/"/>
    <url>/2023/10/11/%E4%BD%BF%E7%94%A8WinCDEmu%E7%9A%84galgame%E5%85%89%E7%9B%98%E6%98%A0%E5%83%8F%E7%9A%84%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%E4%B8%8E%E5%8D%B8%E8%BD%BD%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>挺久之前写的一个简单脚本，偶尔还能用上。</p><p>放在游戏目录下，修改变量值。脚本运行后能做到自动挂载光盘和启动游戏程序，检查到游戏进程关闭时自动卸载光盘。</p><p>光盘的挂载用的是<ahref="https://github.com/sysprogs/WinCDEmu">WinCDEmu</a>，把程序batchmnt.exe添加到用户环境变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">@<span class="hljs-built_in">echo</span> off<br><br>::镜像文件路径<br><span class="hljs-built_in">set</span> <span class="hljs-string">&quot;cur_path=%CD%&quot;</span><br>::修改这里<br><span class="hljs-built_in">set</span> <span class="hljs-string">&quot;iso_filename=DC3WY&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-string">&quot;gamename=DC3WY&quot;</span><br><br><span class="hljs-built_in">set</span> <span class="hljs-string">&quot;iso_filepath=%cur_path%\%iso_filename%.ISO&quot;</span><br><br>::挂载<br><span class="hljs-built_in">echo</span> MOUNT %iso_filepath% !<br>batchmnt <span class="hljs-string">&quot;%iso_filepath%&quot;</span><br>::等待挂载<br>choice /t 1 /d y /n &gt;nul<br><br>::启动游戏<br>%gamename%.EXE<br><br>:start<br>choice /t 2 /d y /n &gt;nul<br>tasklist|find /i <span class="hljs-string">&quot;%gamename%.EXE&quot;</span><br><span class="hljs-keyword">if</span> %errorlevel% NEQ 0 ( <br>                <span class="hljs-built_in">echo</span> The %gamename% closes !<br>    goto end<br>)<br>goto start  （循环）<br><br>:end<br>batchmnt /unmount <span class="hljs-string">&quot;%iso_filepath%&quot;</span><br><br><span class="hljs-built_in">echo</span> UNMOUNTED %iso_filepath% !<br><br>choice /t 2 /d y /n &gt;nul<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>脚本</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
